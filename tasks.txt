MVP - mid-september

√ plain case classes
√ query optimization
√ zero runtime overhead
√ fully non-blocking
√ transactions
√ inserts
√ updates
√ generic test suite
√ database dialects (derby, h2, mysql, postgres)
√ compile-time query validation using db
√ interpolator
√ mapped encoding
√ custom encoders
√ custom functions (via infix)
√ batch queries
- full sql support
	√ take
	√ drop
	√ options
	√ groupBy
	√ aggregations
	√ additional operations (string concatenation, etc)
	√ set operations (union, outer joins, etc)
√ naming strategy
√ table/column aliases (query[Entity]("table_name")(_.someCol -> "some_col"))
- fix a.union(b).map(t => t.s)
- quill-jdbc
- quill-finagle-mysql
- quill-postgresql-async
- quill-mysql-async
- documentation w/ https://github.com/tpolecat/tut
- dynamic queries

Later

- jekyll website w/ docs
- gitter8/activator
- insert case class directly
- master slave
- insert returning id
- upserts
- quill-finagle-postgres
- sql warnings (see doobie)
- more dialects (hsql, oracle, sqlserver, db2)
- monadic io
- quill-doobie
- macro to generate the case classes from db schema
- migrations
- optimistic offline locking
- automatic batching (using clump?)
- sbt plugin (rake)
- non-sql sources (mongo, graphql, in-memory collections)
- transaction isolations
- easy crud (https://github.com/strongtyped/active-slick)
- cached queries
- nested transactions (save points)
- insistence layer√√√